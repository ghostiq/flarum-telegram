{"version":3,"sources":["webpack://@ghostiq/flarumtelegram/webpack/bootstrap","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['app']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['extend']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['models/User']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['Model']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['components/LogInButtons']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['components/LogInButton']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['components/NotificationGrid']\"","webpack://@ghostiq/flarumtelegram/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@ghostiq/flarumtelegram/./src/forum/index.js","webpack://@ghostiq/flarumtelegram/./src/forum/components/addLoginButton.js","webpack://@ghostiq/flarumtelegram/./src/forum/components/addNotificationMethod.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","app","initializers","add","User","canReceiveTelegramNotifications","Model","attribute","ghostiqFlarumTelegramError","extend","LogInButtons","items","LogInButton","component","className","icon","path","children","translator","trans","NotificationGrid","forum","user","session","this","methods","push","label","SettingsPage","flarumTelegramError","botUsername","view","a","href","username"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/LogInButtons'];","module.exports = flarum.core.compat['components/LogInButton'];","module.exports = flarum.core.compat['components/NotificationGrid'];","module.exports = flarum.core.compat['components/SettingsPage'];","import app from 'flarum/app';\nimport User from 'flarum/models/User';\nimport Model from 'flarum/Model';\nimport addLoginButton from './components/addLoginButton';\nimport addNotificationMethod from './components/addNotificationMethod';\n\napp.initializers.add('ghostiq-flarumtelegram', () => {\n    User.prototype.canReceiveTelegramNotifications = Model.attribute('canReceiveTelegramNotifications');\n    User.prototype.ghostiqFlarumTelegramError = Model.attribute('flarumTelegramError');\n\n    addLoginButton();\n    addNotificationMethod();\n});","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport LogInButtons from 'flarum/components/LogInButtons';\nimport LogInButton from 'flarum/components/LogInButton';\n\nexport default function () {\n    extend(LogInButtons.prototype, 'items', function (items) {\n        items.add('ghostiq-flarumtelegram', LogInButton.component({\n            className: 'Button LogInButton--telegram',\n            icon: 'telegram',\n            path: '/auth/telegram',\n            children: app.translator.trans('ghostiq-flarumtelegram.forum.log_in_with_telegram_button'),\n        }));\n    });\n}","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport NotificationGrid from 'flarum/components/NotificationGrid';\nimport SettingsPage from 'flarum/components/SettingsPage';\n\nexport default function () {\n    // Given there's currently no way to extend the list of methods and that the list needs to be complete at the end of init()\n    // We tap into notificationTypes() that is run between the creation of this.methods and the loop that reads them at the end of init()\n    extend(NotificationGrid.prototype, 'notificationTypes', function () {\n        if (!app.forum.attribute('ghostiq-flarumtelegram.enableNotifications')) {\n            return;\n        }\n\n        const user = app.session.user;\n\n        if (!user || !user.canReceiveTelegramNotifications()) {\n            return;\n        }\n\n        this.methods.push({\n            name: 'telegram',\n            icon: 'telegram',\n            label: app.translator.trans('ghostiq-flarumtelegram.forum.settings.notify_by_telegram_heading'),\n        });\n    });\n\n    extend(SettingsPage.prototype, 'notificationsItems', function (items) {\n        if (!app.forum.attribute('ghostiq-flarumtelegram.enableNotifications')) {\n            return;\n        }\n\n        const user = app.session.user;\n\n        if (!user || !user.flarumTelegramError()) {\n            return;\n        }\n\n        const botUsername = app.forum.attribute('ghostiq-flarumtelegram.botUsername');\n\n        items.add('flarumTelegramError', {\n            view() {\n                return m('.Alert', m('p', app.translator.trans('ghostiq-flarumtelegram.forum.settings.unblock_telegram_bot', {\n                    a: m('a', {href: 'https://t.me/' + botUsername}),\n                    username: '@' + botUsername,\n                })))\n            },\n        });\n    });\n}"],"sourceRoot":""}